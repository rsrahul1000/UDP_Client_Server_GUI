/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dos;

import com.sun.media.sound.DLSModulator;
import static dos.UDPClient.data;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.Scanner;

/**
 *
 * @author rsrah
 */
public class Client_UDP extends javax.swing.JFrame {

    Scanner sc = new Scanner(System.in); 
    DatagramSocket ds; 
    DatagramSocket ds1; 
    DatagramPacket DpReceive = null; 
    byte[] receive = new byte[65535]; 
    InetAddress ip;    
    byte buf[] = null; 
    
    public Client_UDP() throws UnknownHostException, SocketException {
        this.ip = InetAddress.getLocalHost();
        this.ds1 = new DatagramSocket(1233);
        this.ds = new DatagramSocket();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        conversationWindow = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        sendClientText = new javax.swing.JTextField();
        sendToServerBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Client");

        conversationWindow.setColumns(20);
        conversationWindow.setRows(5);
        jScrollPane1.setViewportView(conversationWindow);

        jLabel1.setText("Client Message: ");

        sendToServerBtn.setText("Send");
        sendToServerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendToServerBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendClientText, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(sendToServerBtn)
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(sendClientText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendToServerBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendToServerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendToServerBtnActionPerformed
        
        if (evt.getSource() == sendToServerBtn){
            try{
                String inp = sendClientText.getText();  
                sendClientText.setText("");
                conversationWindow.append("Client:-" + inp + "\n");
                if (inp.equals("bye")){ 
                    conversationWindow.append("Client sent bye.....EXITING\n");
                    setVisible(false); //you can't see me!
                    dispose(); //Destroy the JFrame object
                    
                }
                //receive = new byte[65535];
                buf = inp.getBytes(); 
                DatagramPacket DpSend =  new DatagramPacket(buf, buf.length, ip, 1234); 
                ds.send(DpSend); 
                
            }catch(IOException e){}
        }

    }//GEN-LAST:event_sendToServerBtnActionPerformed

    public static StringBuilder data(byte[] a) 
    { 
        if (a == null) 
            return null; 
        StringBuilder ret = new StringBuilder(); 
        int i = 0; 
        while (a[i] != 0) 
        { 
            ret.append((char) a[i]); 
            i++; 
        } 
        return ret;
    }
    
    public static void main(String args[]) throws IOException {
        
        Client_UDP cliudp = new Client_UDP();
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                cliudp.setVisible(true);
            }
        });
        while (true) {
            cliudp.DpReceive = new DatagramPacket(cliudp.receive, cliudp.receive.length); 
            cliudp.ds1.receive(cliudp.DpReceive); 
            
            if (data(cliudp.receive).toString().equals("bye")) {
                cliudp.conversationWindow.append("Client sent bye.....EXITING\n");
                //cliudp.setVisible(false); //you can't see me!
                cliudp.dispose(); //Destroy the JFrame object
                break;
            } 
            else
                cliudp.conversationWindow.append("Server:-" + data(cliudp.receive) + "\n");
            cliudp.receive = new byte[65535];
        } 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea conversationWindow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField sendClientText;
    private javax.swing.JButton sendToServerBtn;
    // End of variables declaration//GEN-END:variables
}
